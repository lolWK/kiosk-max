openapi: 3.0.3
info:
  title: Kiosk API 1.0
  description: Kiosk team 04 API
  contact:
    email: email@google.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: Drink
    description: 음료
  - name: Order
    description: 주문
  - name: Payment
    description: 결제
paths:
  /drinks/categories:
    get:
      tags:
        - Drink
      summary: 카테고리 목록 조회
      operationId: getCategories
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
  /drinks:
    get:
      tags:
        - Drink
      summary: 음료 목록 조회
      operationId: getDrinks
      parameters:
        - name: category
          in: query
          description: 카테고리
          required: true
          schema:
            type: string
            default: coffee
            enum:
              - coffee
              - latte
              - tea
              - juice
              - decaffeine
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Americano'
                    - $ref: '#/components/schemas/Coldbrew'
  /orders:
    post:
      tags:
        - Order
      summary: 음료 주문
      operationId: orderDrinks
      parameters:
        - name: payment
          in: query
          description: 결제 수단
          required: true
          schema:
            type: string
            enum:
              - card
              - cash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order-Request'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order-Response'
  /payments:
    get:
      tags:
        - Payment
      summary: 가능한 결제 수단 조회
      operationId: getPayments
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Card'
                    - $ref: '#/components/schemas/Cash'
components:
  schemas:
    # Size-Option
    Size-Option:
      type: object
      properties:
        type:
          type: string
          example: size
        values:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Size-Small'
              - $ref: '#/components/schemas/Size-Medium'
              - $ref: '#/components/schemas/Size-Big'

    # Temperature-Option
    Temperature-Option:
      type: object
      properties:
        type:
          type: string
          example: temperature
        values:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Temperature-Hot'
              - $ref: '#/components/schemas/Temperature-Cold'


    # Categories
    Categories:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/Coffee'
          - $ref: '#/components/schemas/Latte'
          - $ref: '#/components/schemas/Tea'
          - $ref: '#/components/schemas/Juice'
          - $ref: '#/components/schemas/Decaffeine'

    # Drink
    Americano:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type:
          type: string
          example: coffee
        name:
          type: string
          example: 아메리카노
        img:
          type: string
          example: https://image/americano.jpg
        price:
          type: integer
          example: 4000
        totalQuantity:
          type: integer
          example: 50
        options:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Size-Option'
              - $ref: '#/components/schemas/Temperature-Option'
    Coldbrew:
      type: object
      properties:
        id:
          type: integer
          example: 2
        type:
          type: string
          example: coffee
        name:
          type: string
          example: 콜드브루
        img:
          type: string
          example: https://image/coldbrew.jpg
        price:
          type: integer
          example: 5000
        totalQuantity:
          type: integer
          example: 30
        options:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Size-Option'

    # Payment
    Card:
      type: object
      properties:
        type:
          type: string
          example: card
        img:
          type: string
          example: https://image/card.jpg
        link:
          type: string
          example: /orders?type=card
    Cash:
      type: object
      properties:
        type:
          type: string
          example: cash
        img:
          type: string
          example: https://image/cash.jpg
        link:
          type: string
          example: /orders?type=cash

    # Order Request
    Order-Request:
      type: object
      properties:
        totalAmount:
          type: integer
          example: 30000
        receivedAmount:
          type: integer
          example: 30000
        payment:
          type: string
          example: CASH
        drinks:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Order-Drink-1'
              - $ref: '#/components/schemas/Order-Drink-2'

    # Order Drink
    Order-Drink-1:
      type: object
      properties:
        drinkId:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 5
        orderPrice:
          type: integer
          example: 20000
        options:
          type: integer
          example: [1, 4]
    Order-Drink-2:
      type: object
      properties:
        drinkId:
          type: integer
          example: 2
        quantity:
          type: integer
          example: 2
        orderPrice:
          type: integer
          example: 10000
        options:
          type: array
          items:
            type: integer
            example: 2

    # Order Response
    Order-Response:
      type: object
      properties:
        dailyOrderId:
          type: integer
          example: 1
        payment:
          type: string
          example: 현금결제
        receivedAmount:
          type: integer
          example: 30000
        totalAmount:
          type: integer
          example: 30000
        change:
          type: integer
          example: 0
        drinks:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Ordered-Americano'
              - $ref: '#/components/schemas/Ordered-Coldbrew'

    # Ordered Drink
    Ordered-Americano:
      type: object
      properties:
        name:
          type: string
          example: 아메리카노
        quantity:
          type: integer
          example: 5
        options:
          type: string
          example: ["L", "HOT"]
    Ordered-Coldbrew:
      type: object
      properties:
        name:
          type: string
          example: 콜드브루
        quantity:
          type: integer
          example: 1
        options:
          type: array
          items:
            example: "M"

    # Option-Size
    Size-Big:
      type: object
      properties:
        id:
          type: integer
          example: 3
        value:
          type: string
          example: L
    Size-Medium:
      type: object
      properties:
        id:
          type: integer
          example: 2
        value:
          type: string
          example: M
    Size-Small:
      type: object
      properties:
        id:
          type: integer
          example: 1
        value:
          type: string
          example: S

    # Option-Temperature
    Temperature-Hot:
      type: object
      properties:
        id:
          type: integer
          example: 4
        value:
          type: string
          example: Hot
    Temperature-Cold:
      type: object
      properties:
        id:
          type: integer
          example: 5
        value:
          type: string
          example: Ice

    # Category
    Coffee:
      type: object
      properties:
        id:
          type: string
          example: coffee
        name:
          type: string
          example: 커피
    Latte:
      type: object
      properties:
        id:
          type: string
          example: latte
        name:
          type: string
          example: 라떼
    Tea:
      type: object
      properties:
        id:
          type: string
          example: tea
        name:
          type: string
          example: 티
    Juice:
      type: object
      properties:
        id:
          type: string
          example: juice
        name:
          type: string
          example: 주스
    Decaffeine:
      type: object
      properties:
        id:
          type: string
          example: decaffeine
        name:
          type: string
          example: 디카페인
